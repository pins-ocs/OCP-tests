Boundary Conditions activation status
[xx] = activated, [  ] = NOT activated

[ 0] initial_x
[ 1] initial_v
[ 2] initial_sT
[ 3] initial_sB
[ 4] final_v



Constraints 1D
vsTpositive = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.0010000, epsilon=0.0010000
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsBpositive = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.0010000, epsilon=0.0010000
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsTmax = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.0010000, epsilon=0.0010000
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsTBInterval = {
  Type      = INTERVAL
  SubType   = WallRegular, h=0.0010000, epsilon=0.0010000
  Tolerance = 0.001
  Epsilon   = 0.001
  MinValue  = -1
  MaxValue  = 1
  Active    = YES
}

User class (pointer)

User function `pMesh`
BEGIN Mesh[mesh]
num. segments = 4
num. nodes = 104
Segment N.0: s0 = 0.000 length = 0.1000 npts = 11 no data set
Segment N.1: s0 = 0.1000 length = 0.4000 npts = 41 no data set
Segment N.2: s0 = 0.5000 length = 0.4000 npts = 41 no data set
Segment N.3: s0 = 0.9000 length = 0.1000 npts = 11 no data set
END Mesh[mesh]

User mapped functions
User function ``clip'' mapped with: ClipIntervalWithErf, h=0.10000, delta=0.0000, delta2=0.0000

Model Parameters
..................................epsiTB = 0.001
.................................maxClip = 1
....................................maxT = 2
.................................minClip = -1
....................................tauB = 0.001
....................................tauT = 0.02
INFO CLASS = BangBangFtau
  #nodes      = 104
  dim         = u = 2, q = 1, x = 4, p = 0, omega = 5, bc = 5, full_bc = 13
  BC          = Inital = 8, Final = 5, Cyclic = 0
  OMEGA       = Inital = 4, Final = 1, Cyclic = 0
  total       = nZ = 837, UC = 206, Q = 104
  index start = omega = 832, p = 837
  FD jacobian = ANALYTIC
END INFO
Solver Master System: CyclicReduction+LU and LastBlock LUPQ
Solver Controls:      Newton
Jacobian evaluation:  Analitic Jacobian
Initializer Controls: Quasi-Newton
Used threads:         15


NewtonDumped --- start iterations ---
[iter, Dumping] (|f0|_1,|f1|_1) [|d0|_1,|d1|_1] lambda
[  1,12] (  0.101   ,  0.122   ) [   15.0   ,   15.0   ] 0.000790   [solverNewtonDumped]
[  2, 5] (  0.122   ,  0.157   ) [   20.0   ,   19.9   ] 0.00214    [solverNewtonDumped]
[  3, 5] (  0.157   ,  0.138   ) [   19.8   ,   19.7   ] 0.00352    [solverNewtonDumped]
[  4, 4] (  0.138   ,  0.126   ) [   5.22   ,   5.14   ] 0.00784    [solverNewtonDumped]
[  5, 3] (  0.126   ,  0.135   ) [   1.15   ,   1.10   ] 0.0204     [solverNewtonDumped]
[  6, 2] (  0.135   ,  0.140   ) [  0.342   ,  0.315   ] 0.0571     [solverNewtonDumped]
[  7, 3] (  0.140   ,  0.179   ) [  0.224   ,  0.167   ] 0.261      [solverNewtonDumped]
[  8, 1] (  0.179   ,  0.169   ) [  0.175   ,  0.0951  ] 1.00       [solverNewtonDumped]
[  9, 2] (  0.169   ,  0.178   ) [  0.0457  ,  0.0401  ] 0.205      [solverNewtonDumped]
[ 10, 3] (  0.178   ,  0.179   ) [  0.0442  ,  0.0468  ] 0.111      [solverNewtonDumped]
[ 11, 4] (  0.179   ,  0.146   ) [  0.0374  ,  0.0332  ] 0.134      [solverNewtonDumped]
[ 12, 3] (  0.146   ,  0.138   ) [  0.0291  ,  0.0256  ] 0.109      [solverNewtonDumped]
[ 13, 4] (  0.138   ,  0.124   ) [  0.0268  ,  0.0293  ] 0.0611     [solverNewtonDumped]
[ 14, 2] (  0.124   ,  0.0915  ) [  0.0325  ,  0.0155  ] 0.145      [solverNewtonDumped]
[ 15, 2] (  0.0915  ,  0.0578  ) [  0.0135  ,  0.0138  ] 0.549      [solverNewtonDumped]
[ 16, 1] (  0.0578  ,  0.0119  ) [  0.0107  , 0.00630  ] 1.00       [solverNewtonDumped]
[ 17, 2] (  0.0119  , 0.00630  ) [  0.0131  ,  0.0112  ] 0.248      [solverNewtonDumped]
[ 18, 4] ( 0.00630  , 0.00376  ) [  0.0127  , 0.00932  ] 0.0658     [solverNewtonDumped]
[ 19, 1] ( 0.00376  , 0.00144  ) [ 0.00513  , 0.00174  ] 0.513      [solverNewtonDumped]
[ 20, 1] ( 0.00144  , 3.46e-05 ) [ 0.000761 , 1.99e-05 ] 1.00       [solverNewtonDumped]
[iter, Dumping] (|f0|_1,|f1|_1) [|d0|_1,|d1|_1] lambda
[ 21, 1] ( 3.46e-05 , 4.21e-07 ) [ 1.93e-05 , 5.63e-08 ] 1.00       [solverNewtonDumped]
[ 22, 1] ( 4.21e-07 , 2.07e-10 ) [ 5.83e-08 , 3.21e-11 ] 1.00       [solverNewtonDumped]
[ 23, 1] ( 2.07e-10 , 2.00e-10 ) [ 3.21e-11 , 1.94e-11 ] 1.00       [solverNewtonDumped]
[ 24, 1] ( 2.00e-10 , 2.03e-10 ) [ 1.94e-11 , 1.51e-11 ] 1.00       [solverNewtonDumped]
[ 25, 1] ( 2.03e-10 , 2.04e-10 ) [ 1.51e-11 , 1.22e-11 ] 1.00       [solverNewtonDumped]

------------------------ STATISTIC -------------------------
Elapsed Time   = 50.1[ms]      timeout        = 0 [ms]
iteration      = 25            tolerance      = 1.000e-09 
max iterations = 300           N. Equations   = 837
max acc. iter. = 800           N. System pars = 206
Converged      = YES           Memory Used    = 138Kb (+91bytes)
----------------------- CONTINUATION -----------------------
Initial Step   = 0.2           Minimum Step   = 0.001     
Reduce Factor  = 0.5           Augment Factor = 1.5       
Few iterations = 8         
----------------------- EVALUATIONS ------------------------
Function       = 70            Jacobian       = 25        
Factorization  = 25            Inversion      = 94        
------------------------ USER INFO -------------------------
last ||d||_inf = 9.9920e-10    last||d1||_inf = 1.1187e-09
last ||f||_inf = 9.0419e-08    last||f||_1    = 2.0368e-10
------------------------------------------------------------
              __   __             ___  __   __   ___  __              
             /  ` /  \ |\ | \  / |__  |__) / _` |__  |  \             
             \__, \__/ | \|  \/  |___ |  \ \__> |___ |__/             
                                                                      
Check Jacobian Begin
#ERR 1 Jacobian block N. 0 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       5.3825 / 5.3872       [A/FD] ---    0.0046581 / 0.086467     [err/err(%)]
jac[  3,  7] =       107.65 / 107.74       [A/FD] ---     0.093162 / 0.086467     [err/err(%)]
jac[  2, 15] =       5.3825 / 5.3872       [A/FD] ---    0.0046581 / 0.086467     [err/err(%)]
jac[  3, 15] =       107.65 / 107.74       [A/FD] ---     0.093162 / 0.086467     [err/err(%)]

#ERR 2 Jacobian block N. 1 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       3.9810 / 3.9833       [A/FD] ---    0.0023020 / 0.057793     [err/err(%)]
jac[  3,  7] =       79.620 / 79.666       [A/FD] ---     0.046041 / 0.057793     [err/err(%)]
jac[  2, 15] =       3.9810 / 3.9833       [A/FD] ---    0.0023020 / 0.057793     [err/err(%)]
jac[  3, 15] =       79.620 / 79.666       [A/FD] ---     0.046041 / 0.057793     [err/err(%)]

#ERR 3 Jacobian block N. 2 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       4.6716 / 4.6749       [A/FD] ---    0.0033435 / 0.071521     [err/err(%)]
jac[  3,  7] =       93.432 / 93.499       [A/FD] ---     0.066871 / 0.071521     [err/err(%)]
jac[  2, 15] =       4.6716 / 4.6749       [A/FD] ---    0.0033435 / 0.071521     [err/err(%)]
jac[  3, 15] =       93.432 / 93.499       [A/FD] ---     0.066871 / 0.071521     [err/err(%)]

#ERR 4 Jacobian block N. 3 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       7.3746 / 7.3843       [A/FD] ---    0.0097164 / 0.13158      [err/err(%)]
jac[  3,  7] =       147.49 / 147.69       [A/FD] ---      0.19433 / 0.13158      [err/err(%)]
jac[  2, 15] =       7.3746 / 7.3843       [A/FD] ---    0.0097164 / 0.13158      [err/err(%)]
jac[  3, 15] =       147.49 / 147.69       [A/FD] ---      0.19433 / 0.13158      [err/err(%)]

#ERR 5 Jacobian block N. 4 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       12.810 / 12.846       [A/FD] ---     0.035297 / 0.27478      [err/err(%)]
jac[  3,  7] =       256.21 / 256.91       [A/FD] ---      0.70594 / 0.27478      [err/err(%)]
jac[  2, 15] =       12.810 / 12.846       [A/FD] ---     0.035297 / 0.27478      [err/err(%)]
jac[  3, 15] =       256.21 / 256.91       [A/FD] ---      0.70594 / 0.27478      [err/err(%)]

#ERR 6 Jacobian block N. 5 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       21.608 / 21.727       [A/FD] ---      0.11990 / 0.55184      [err/err(%)]
jac[  3,  7] =       432.15 / 434.55       [A/FD] ---       2.3980 / 0.55184      [err/err(%)]
jac[  2, 15] =       21.608 / 21.727       [A/FD] ---      0.11990 / 0.55184      [err/err(%)]
jac[  3, 15] =       432.15 / 434.55       [A/FD] ---       2.3980 / 0.55184      [err/err(%)]

skipping...
Last block: OK
Check Jacobian End
target [Lagrange,Mayer]       = [ 0.001931, -0.2221 ]
[Penalties/Barriers,Controls] = [ 0.0003978, 0.000 ]
All Done Folks!
