Boundary Conditions activation status
[xx] = activated, [  ] = NOT activated

[ 0] initial_x
[ 1] initial_v
[ 2] initial_sT
[ 3] initial_sB
[ 4] final_v



Constraints 1D
vsTpositive = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.001, epsilon=0.001
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsBpositive = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.001, epsilon=0.001
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsTmax = {
  Type      = GREATER THAN
  SubType   = WallRegular, h=0.001, epsilon=0.001
  Tolerance = 0.001
  Epsilon   = 0.001
  Active    = YES
}
vsTBInterval = {
  Type      = INTERVAL
  SubType   = WallRegular, h=0.001, epsilon=0.001
  Tolerance = 0.001
  Epsilon   = 0.001
  MinValue  = -1
  MaxValue  = 1
  Active    = YES
}

User class (pointer)

User function `pMesh`
BEGIN Mesh[mesh]
num. segments = 1
num. nodes = 401
Segment N.0: s0 = 0 length = 1 npts = 401 no data set
END Mesh[mesh]

User mapped functions
User function ``clip'' mapped with: ClipIntervalWithErf, h=0.1, delta=0, delta2=0

Model Parameters
..................................epsiTB = 0.001
.................................maxClip = 1
....................................maxT = 2
.................................minClip = -1
....................................tauB = 0.001
....................................tauT = 0.02
INFO CLASS = BangBangFtau
  #nodes      = 401
  dim         = u = 2, q = 1, x = 4, p = 0, omega = 5, bc = 5, full_bc = 13
  BC          = Inital = 8, Final = 5, Cyclic = 0
  OMEGA       = Inital = 4, Final = 1, Cyclic = 0
  total       = nZ = 3213, UC = 800, Q = 401
  index start = omega = 3208, p = 3213
  FD jacobian = ANALYTIC
END INFO
Solver Master System: CyclicReduction+LU and LastBlock LUPQ
Solver Controls:      Newton
Jacobian evaluation:  Analitic Jacobian
Initializer Controls: Quasi-Newton
Used threads:         15


NewtonDumped --- start iterations ---
[iter, Dumping] (|f0|_1,|f1|_1) [|d0|_1,|d1|_1] lambda [Angle:Armijo:f_2:d_2:f_1:d_1:bad] solverNewtonDumped
[  1,22] (  0.0265  ,  0.0351  ) [   15.1   ,   15.1   ] 0.00103    [0:0:17:0:0:0:0]
[  2, 8] (  0.0351  ,  0.0409  ) [   21.1   ,    21    ] 0.002      [0:0:3:0:0:0:0]
[  3, 8] (  0.0409  ,  0.0376  ) [   19.6   ,   19.5   ] 0.0025     [0:0:2:0:0:0:0]
[  4, 9] (  0.0376  ,  0.0317  ) [   7.81   ,   7.76   ] 0.004      [0:0:3:0:0:0:0]
[  5, 8] (  0.0317  ,  0.0268  ) [   2.86   ,   2.81   ] 0.01       [0:0:2:0:0:0:0]
[  6, 7] (  0.0268  ,  0.0272  ) [  0.762   ,  0.739   ] 0.02       [0:0:2:0:0:0:0]
[  7, 6] (  0.0272  ,  0.0301  ) [   0.36   ,  0.338   ] 0.05       [0:0:1:0:0:0:0]
[  8,13] (  0.0301  ,  0.0333  ) [  0.247   ,  0.227   ] 0.0969     [0:0:9:0:0:0:0]
[  9, 8] (  0.0333  ,  0.0364  ) [  0.217   ,  0.191   ] 0.164      [0:0:4:0:0:0:1]
[ 10, 6] (  0.0364  ,  0.0367  ) [  0.183   ,   0.16   ] 0.193      [0:0:4:0:0:0:1]
[ 11, 4] (  0.0367  ,  0.0362  ) [  0.152   ,  0.127   ] 0.292      [0:0:2:0:0:0:1]
[ 12, 3] (  0.0362  ,  0.0305  ) [  0.104   ,  0.0729  ] 0.5        [0:0:0:0:0:0:0]
[ 13, 1] (  0.0305  , 0.00838  ) [  0.0461  ,  0.0132  ] 1          [0:0:0:0:0:0:0]
[ 14, 5] ( 0.00838  , 0.00339  ) [  0.0026  , 0.00195  ] 0.656      [0:0:0:4:0:0:0]
[ 15, 1] ( 0.00339  , 0.000227 ) [ 0.000849 , 2.43e-05 ] 1          [0:0:0:0:0:0:0]
[ 16, 1] ( 0.000227 , 4.51e-05 ) [ 4.27e-05 , 8.62e-06 ] 1          [0:0:0:0:0:0:0]
[ 17, 1] ( 4.51e-05 , 5.33e-06 ) [ 1.59e-05 , 2.09e-06 ] 1          [0:0:0:0:0:0:0]
[ 18, 1] ( 5.33e-06 , 1.64e-07 ) [ 2.91e-06 , 9.93e-08 ] 1          [0:0:0:0:0:0:0]
[ 19, 1] ( 1.64e-07 , 2.75e-10 ) [ 1.08e-07 , 2.07e-10 ] 1          [0:0:0:0:0:0:0]
[ 20, 1] ( 2.75e-10 , 1.61e-13 ) [ 2.08e-10 , 5.01e-14 ] 1          [0:0:0:0:0:0:0]

.................. CONTROLS nonlinear system solver ..................
---------------------------- NewtonDumped ----------------------------
n_power        = 4             check_angle    = 120 [degree]
c1             = 0.01          lambda_min     = 1e-10
dump_min       = 0.4           dump_max       = 0.9
----------------------------------------------------------------------

.................... BIG nonlinear system solver .....................
---------------------------- NewtonDumped ----------------------------
n_power        = 2             check_angle    = 120 [degree]
c1             = 0.01          lambda_min     = 1e-10
dump_min       = 0.4           dump_max       = 0.9
ratio ||f||_2  = 1.4           ratio ||d||_2  = 1.4
ratio ||f||_1  = 1.4           ratio ||d||_1  = 1.4
----------------------------- STATISTIC ------------------------------
Elapsed Time   = 289[ms]       timeout        = 0 [ms]
iteration      = 20            tolerance      = 1e-09
max iterations = 300           N. Equations   = 3213
max acc. iter. = 800           N. System pars = 800
Converged      = YES           Memory Used    = 390Kb (+7bytes)
---------------------------- CONTINUATION ----------------------------
Initial Step   = 0.2           Minimum Step   = 0.001
Reduce Factor  = 0.5           Augment Factor = 1.5
Few iterations = 8
---------------------------- EVALUATIONS -----------------------------
Function       = 84            Jacobian       = 20
Factorization  = 20            Inversion      = 103
........................... last residuals ...........................
last ||f||_inf = 1.7337e-10    last ||d||_inf = 8.7352e-12
last ||f||_1   = 1.6147e-13    last ||d||_1   = 5.009e-14
last ||f||_2   = 3.5934e-12    last ||d||_2   = 3.7544e-13
----------------------------------------------------------------------
              __   __             ___  __   __   ___  __              
             /  ` /  \ |\ | \  / |__  |__) / _` |__  |  \             
             \__, \__/ | \|  \/  |___ |  \ \__> |___ |__/             
                                                                      
Check Jacobian Begin
#ERR 1 Jacobian block N. 0 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =        1.678 / 1.6799       [A/FD] ---    0.0019496 / 0.11605      [err/err(%)]
jac[  3,  7] =       33.559 / 33.598       [A/FD] ---     0.038992 / 0.11605      [err/err(%)]
jac[  2, 15] =        1.678 / 1.6799       [A/FD] ---    0.0019496 / 0.11605      [err/err(%)]
jac[  3, 15] =       33.559 / 33.598       [A/FD] ---     0.038992 / 0.11605      [err/err(%)]

#ERR 2 Jacobian block N. 1 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       1.4773 / 1.4788       [A/FD] ---    0.0014482 / 0.097932     [err/err(%)]
jac[  3,  7] =       29.547 / 29.576       [A/FD] ---     0.028964 / 0.097932     [err/err(%)]
jac[  2, 15] =       1.4773 / 1.4788       [A/FD] ---    0.0014482 / 0.097932     [err/err(%)]
jac[  3, 15] =       29.547 / 29.576       [A/FD] ---     0.028964 / 0.097932     [err/err(%)]

#ERR 3 Jacobian block N. 2 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       1.3096 / 1.3107       [A/FD] ---     0.001093 / 0.083392     [err/err(%)]
jac[  3,  7] =       26.192 / 26.213       [A/FD] ---      0.02186 / 0.083392     [err/err(%)]
jac[  2, 15] =       1.3096 / 1.3107       [A/FD] ---     0.001093 / 0.083392     [err/err(%)]
jac[  3, 15] =       26.192 / 26.213       [A/FD] ---      0.02186 / 0.083392     [err/err(%)]

#ERR 4 Jacobian block N. 3 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       1.1789 / 1.1797       [A/FD] ---   0.00085511 / 0.072484     [err/err(%)]
jac[  3,  7] =       23.578 / 23.595       [A/FD] ---     0.017102 / 0.072484     [err/err(%)]
jac[  2, 15] =       1.1789 / 1.1797       [A/FD] ---   0.00085511 / 0.072484     [err/err(%)]
jac[  3, 15] =       23.578 / 23.595       [A/FD] ---     0.017102 / 0.072484     [err/err(%)]

#ERR 5 Jacobian block N. 4 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       1.0867 / 1.0874       [A/FD] ---   0.00070705 / 0.065024     [err/err(%)]
jac[  3,  7] =       21.733 / 21.747       [A/FD] ---     0.014141 / 0.065024     [err/err(%)]
jac[  2, 15] =       1.0867 / 1.0874       [A/FD] ---   0.00070705 / 0.065024     [err/err(%)]
jac[  3, 15] =       21.733 / 21.747       [A/FD] ---     0.014141 / 0.065024     [err/err(%)]

#ERR 6 Jacobian block N. 5 type: FD [(x+l) x (2*(x+l)+p) = 8 x 16]

jac[  2,  7] =       1.0316 / 1.0322       [A/FD] ---   0.00062618 / 0.060665     [err/err(%)]
jac[  3,  7] =       20.631 / 20.644       [A/FD] ---     0.012524 / 0.060665     [err/err(%)]
jac[  2, 15] =       1.0316 / 1.0322       [A/FD] ---   0.00062618 / 0.060665     [err/err(%)]
jac[  3, 15] =       20.631 / 20.644       [A/FD] ---     0.012524 / 0.060665     [err/err(%)]

skipping...
Last block: OK
Check Jacobian End
Check Controls Begin
Check Controls End
target [Lagrange,Mayer]       = [ 0.00194, -0.2221 ]
[Penalties/Barriers,Controls] = [ 0.0003979, 0 ]
All Done Folks!
